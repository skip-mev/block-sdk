syntax = "proto3";
package sdk.blocksdk.v1;

option go_package = "github.com/skip-mev/block-sdk/x/blocksdk/types";

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/query/v1/query.proto";
import "sdk/blocksdk/v1/blocksdk.proto";

// Query defines the x/blocksdk querier service.
service Query {
  // Lane queries the a lane by its id.
  rpc Lane(QueryLaneRequest) returns (QueryLaneResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/block-sdk/blocksdk/v1/lane/{id}";
  }

  // Lane queries all lanes in the x/blocksdk module
  rpc Lanes(QueryLanesRequest) returns (QueryLanesResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/block-sdk/blocksdk/v1/lanes";
  }
}

// QueryLaneRequest is the request type for the Query/Lane RPC method.
message QueryLaneRequest { string id = 1; }

// QueryLaneResponse is the response type for the Query/Lane RPC method.
message QueryLaneResponse { Lane lane = 1 [ (gogoproto.nullable) = false ]; }

// QueryLaneRequest is the request type for the Query/Lanes RPC method.
message QueryLanesRequest {}

// QueryLaneResponse is the response type for the Query/Lanes RPC method.
message QueryLanesResponse {
  repeated Lane lanes = 1 [ (gogoproto.nullable) = false ];
}
