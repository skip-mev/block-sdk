syntax = "proto3";
package sdk.blocksdk.v1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/skip-mev/block-sdk/x/blocksdk/types";

// Lane defines a block-sdk lane and its associated parameters.  Only the
// parameters that are critical to consensus are stored on-chain in this object.
// The other associated configuration for a lane can be set and stored locally,
// per-validator.
message Lane {
  // id is the unique identifier of a Lane.  Maps to a block-sdk laneName.
  string id = 1;

  // max_block_space defines the relative percentage of block space that can be
  // used by this lane. NOTE: If this is set to zero, then there is no limit
  // on the number of transactions that can be included in the block for this
  // lane (up to maxTxBytes as provided by the request). This is useful for the
  // default lane.
  string max_block_space = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  // order is the priority ordering of the Lane when processed in
  // PrepareProposal and ProcessProposal. Lane orders should be set in order of
  // priority starting from 0, monotonically increasing and non-overlapping. A
  // lane with a lower order value will have a higher priority over a lane with
  // a higher order value.  For example, if LaneA has priority of 0 and LaneB
  // has a priority of 1, LaneA has priority over LaneB.
  uint64 order = 3;
}
